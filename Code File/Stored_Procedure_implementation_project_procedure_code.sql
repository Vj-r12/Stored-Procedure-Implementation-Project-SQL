/*****     STORED PROCEDURE IMPLEMENTATION PROJECT     *****/

select * from sales_info; 
select * from inventory_info;
select * from revenue_info;

-- Automation Update Procedure.

CREATE OR REPLACE PROCEDURE AUTO_UPDATE (CUSTOMER_ID_V int,PRODUCT_ID_V varchar,QUANTITY_V int,AMOUNT_PER_PRODUCT_V int)
LANGUAGE 'plpgsql' 
AS $$
DECLARE
TOTAL_QUANTITY_V int;
TOTAL_AMOUNT_V int;
BEGIN
SELECT SUM(QUANTITY_V) INTO TOTAL_QUANTITY_V FROM SALES_INFO 
WHERE PRODUCT_ID = PRODUCT_ID_V;
SELECT SUM(TOTAL_AMOUNT) INTO TOTAL_AMOUNT_V FROM SALES_INFO 
WHERE PRODUCT_ID = PRODUCT_ID_V;
INSERT INTO SALES_INFO (CUSTOMER_ID,PRODUCT_ID,QUANTITY,AMOUNT_PER_PRODUCT) VALUES (CUSTOMER_ID_V,PRODUCT_ID_V,QUANTITY_V,
																					amount_per_product_v);
UPDATE SALES_INFO SET TOTAL_AMOUNT = (QUANTITY_V * AMOUNT_PER_PRODUCT_V) 
WHERE CUSTOMER_ID = CUSTOMER_ID_V;
UPDATE INVENTORY_INFO SET CLOSING_STOCK = (OPENING_STOCK - TOTAL_QUANTITY_V) 
WHERE PRODUCT_ID = PRODUCT_ID_V;
UPDATE INVENTORY_INFO SET TOTAL_ITEM_SOLD_OF_PRODUCT = TOTAL_QUANTITY_V 
WHERE PRODUCT_ID = PRODUCT_ID_V;
UPDATE INVENTORY_INFO SET STOCK_STATUS = CASE
                                              WHEN CLOSING_STOCK = 0 THEN 'Not Available'
											  ELSE 'Available'
											  END;
UPDATE REVENUE_INFO SET PRODUCT_REVENUE = TOTAL_AMOUNT_V 
WHERE PRODUCT_ID = PRODUCT_ID_V;
END;
$$;

call auto_update (1,'PID1',5,600);
call auto_update (2,'PID1',5,700);
call auto_update (3,'PID2',5,100);
call auto_update (4,'PID2',10,100);
call auto_update (5,'PID1',5,700);
call auto_update(6,'PID2',10,100);